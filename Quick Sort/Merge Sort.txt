/*
 ============================================================================
                             MERGE SORT
 Assignment no. : 7
 Roll no.       : 23333
 Batch          : F11
 ============================================================================
 */
#include <stdio.h>
#include <stdlib.h>
void merge_sort(int list[],int n);
void merge_pass(int list[],int sorted[],int n, int length);
void merge(int list[], int sorted[],int i, int m, int n);
int main(void)
{
	int list[20],n,i;
	printf("Enter the total number of elements.\n");
	scanf("%d",&n);
	printf("Enter the elements of the list.\n");
	for(i=0; i<n;i++)
	{
		scanf("%d",&list[i]);
	}
	/*printf("ELEMENTS ARE\n");
	for(i=0; i<n;i++)
	{
		printf("%d\n",list[i]);
	}*/
    merge_sort(list,n);
}
void merge_sort(int list[],int n)
{
	int length=1,i;
	int sorted[20];
	while(length<n)
	{
		merge_pass(list,sorted,n,length);
		length*=2;
		merge_pass(sorted,list,n,length);
		length*=2;
	}
	printf("Sorted list:\n");
	for(i=0; i<n;i++)
	{
		printf("%d\n",sorted[i]);
	}
}
void merge_pass(int list[],int sorted[],int n, int length)
{
	int i,j;
	for(i=0; i<(n-2*length);i+=2*length)
	{
		merge(list,sorted,i,i+length-1, i+2*length-1);
	}
	if(i+length<n)
		merge(list,sorted,i,i+length-1,n-1);
	else
		for(j=i; j<n; j++)
			sorted[j]=list[j];
}
void merge(int list[], int sorted[],int i, int m, int n)
{
	int j,k,t;
	j=m+1;
	k=i;
	while(i<=m && j<=n)
	{
		if(list[i]<=list[j])
			sorted[k++]=list[i++];
		else
			sorted[k++]=list[j++];
	}
	if(i>m)
	{
		for(t=j; t<n; t++)
			sorted[k+t-j]=list[t];
	}
	else
	{
		for(t=i; t<=m; t++)
			sorted[k+t-i]=list[t];
	}
}
