/*
 ============================================================================
                        STRING OPERATIONS (WITH POINTERS)
 Assignment no. : 3
 Roll no.       : 23333
 Batch          : F11
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
void input(char *p);
int length(char *string);
void copy(char *string, char *s1);
int compare(char *string,char *s1);
void reverse(char *string,char *s1);
int sub(char *string,char *s1);
int main(void)
{
	char str[20];
	char *p=str;
	int choice=0;
	input(p);
	do
	{
	  printf("\n\n1.Length\n2.Copy\n3.Compare\n4.Reverse\n5.Pallindrome\n6.Substring\n7.Exit\n\n");
	  printf("Enter your choice:");
	  scanf("%d", &choice);
	  printf("\n");
	  switch(choice)
	  {
	   	   case 1:
	   	   {
	   		   int len;
	   		   len=length(p);
	   		   printf("Length of the string is: %d\n",len);
	   		   break;
	   	   }
	   	   case 2:
	   	   {
	   		   char s1[20];
	   		   char *q=s1;
	   		   copy(p,q);
	   		   printf("\n\nSource string: %s\n",p);
	   		   printf("Destination string: %s\n",q);
	   		   printf("Successfully copied \n");
	   		   break;
	   	   }
	   	   case 3:
	   	   {
	   		   char s1[20];
	   		   char *q=s1;
	   		   input(q);
	   		   int comp=0;
	   		   comp=compare(p,q);
	   		   if(comp==0)
	   		   {
	   			   printf("Strings are same \n");
	   		   }
	   		   else if(comp<0)
	   		   {
	   			 printf("Second string is below the first string alphabetically \n");
	   		   }
	   		   else if(comp>0)
	   		   {
	   			 printf("First string is below the second string alphabetically \n");
	   		   }
	   		   break;
	   	   }
	   	   case 4:
	   	   {
	   		   char s1[20];
	   		   char *q=s1;
	   		   reverse(p,q);
	   		   printf("Reverse of the string is: %s\n",q);
	   		   break;
	   	   }
	   	   case 5:
	   	   {
	   		   char s1[20];
	   		   char *q=s1;
	   		   reverse(p,q);
	   		   if(compare(p,q)==0)
	   		   {
	   			   printf("Pallindrome \n");
	   		   }
	   		   else
		       {
				   printf("Not Pallindrome \n");
               }
	   		   break;
	   	   }
	   	   case 6:
	   	   {
	   		   char s1[20];
	   		   char *q=s1;
	   		   input(q);
	   		   int s=sub(p,q);
	   		   if(s==0)
	   			   printf("Not present\n");
	   		   else
	   			   printf("The string is present %d times \n",s);
	   		   break;
	   	   }
	   	   case 7:
	   	   {
	   		   printf("THANK YOU \n");
	   		   break;
	   	   }
	   }
	}while(choice!=7);
}
void input(char *p)
{
	printf("Enter the string \n");
	scanf("\n");
    gets(p);
}
int length(char *string)
{
	int i=0;
	while(*(string+i)!='\0')
	{
		i++;
	}
	return i;
}
void copy(char *string, char *s1)
{
	while(*string)
    {
        *s1=*string;
        s1++;
        string++;
    }
}
int compare(char *string, char *s1)
{
	int l1,i;
	char ch1,ch2;
	l1=length(string);
	for(i=0; i<l1; i++)
	{
		ch1=*(string+i);
		ch2=*(s1+i);
		if(ch1!=ch2)
		{
			return (ch1-ch2);
			break;
		}
	}
	return (*(string+i)-*(s1+i));
}
void reverse(char *string,char *s1)
{
	 int l,i,c;
	 l=length(string);
	 c=l-1;
	 for(i=0; i<l; i++)
	 {
		 *(s1+i)=*(string+c);
		 c--;
	 }
	 *(s1+i)='\0';
}
int sub(char *string,char *s1)
{
	int i, j ,k,count=0;
	for(i=0; i<length(string); i++)
	{
        k=0;
		if(*(s1+k)==*(string+i))
		{
			k=i+1;
			for(j=1; j<length(s1); j++)
			{
				if(*(s1+j)==*(string+k))
				{
					k++;
					continue;
				}

				else
					break;
			}
			if(j==length(s1))
				count++;
		}
	}
	return count;
}